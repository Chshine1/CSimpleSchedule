<prism:PrismApplication x:Class="DiaryProject.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:dr="http://schemas.microsoft.com/expression/2010/drawing">
    <Application.Resources>
        <ResourceDictionary>
            
            <SolidColorBrush x:Key="White0" Color="#FFFFFF" />
            <SolidColorBrush x:Key="White1" Color="#FDFDFD" />
            <SolidColorBrush x:Key="White2" Color="#F3F3F4" />
            <SolidColorBrush x:Key="White3" Color="#ECECED" />
            <SolidColorBrush x:Key="White4" Color="#D9D9D9" />
            
            <SolidColorBrush x:Key="Blue0" Color="#6FA3FF" />
            <SolidColorBrush x:Key="Blue1" Color="#91B9FF" />
            <SolidColorBrush x:Key="Blue2" Color="#B0CDFF" />
            <SolidColorBrush x:Key="Blue3" Color="#D7E5FE" />
            <SolidColorBrush x:Key="Blue4" Color="#E6EFFF" />
            
            <Style x:Key="HyperLinkStyle" TargetType="TextBlock">
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Foreground" Value="Gray" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="#555555" />
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="MenuStyle" TargetType="ListBoxItem">
                <Setter Property="Height" Value="37" />
                <Setter Property="IsEnabled" Value="{Binding IsPageEnabled}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid>
                                <Border x:Name="BackgroundBorder" CornerRadius="5" Margin="3" />
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
                            </Grid>
                         
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{StaticResource White4}" />
                                </Trigger>
                                
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="BackgroundBorder" Value="{StaticResource White3}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="CalendarMemoStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="BorderFrame"
                                    BorderThickness="2" Background="{Binding BackgroundColor}"
                                    BorderBrush="{Binding BorderColor}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="BorderFrame" Property="Background" Value="#F8F0C7" />
                                    <Setter TargetName="BorderFrame" Property="BorderBrush" Value="#F2E23E" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Border x:Name="OpacityBorder">
                                    <Border.Background>
                                        <SolidColorBrush Color="Black" Opacity="0.01" />
                                    </Border.Background>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" />
                                </Border>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="OpacityBorder" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.14" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OpacityBorder" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.06" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="CircularProgressBar" TargetType="ProgressBar">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Grid Background="Transparent" Width="80" Height="80">
                                <dr:Arc x:Name="Bar" Fill="White" Stroke="White" Opacity="0.75"
                                        Stretch="None" StartAngle="0" EndAngle="270" ArcThickness="5" />
                                <Grid.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard TargetName="Bar">
                                                    <DoubleAnimation From="1" To="360" Duration="0:0:1" Storyboard.TargetProperty="StartAngle" AutoReverse="False" RepeatBehavior="Forever" />
                                                    <DoubleAnimation From="136" To="495" Duration="0:0:1" Storyboard.TargetProperty="EndAngle" AutoReverse="False" RepeatBehavior="Forever" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Grid.Triggers>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MemoEditorExpander" TargetType="{x:Type Expander}">
                <Setter Property="BorderThickness" Value="0 0 0 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" CornerRadius="4"
                                    SnapsToDevicePixels="True">
                                <DockPanel>
                                    <ToggleButton x:Name="HeaderSite"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  Content="{TemplateBinding Header}" DockPanel.Dock="Bottom"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Width="900" MinHeight="0"
                                                  Padding="{TemplateBinding Padding}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border x:Name="Mask" Padding="{TemplateBinding Padding}"
                                                                    Width="900" Height="16" CornerRadius="0,0,4,4" BorderThickness="0"
                                                                    ToolTip="展开编辑">
                                                                <Border.Background>
                                                                    <SolidColorBrush Color="Black" Opacity="0.001" />
                                                                </Border.Background>
                                                                <mat:PackIcon x:Name="Arrow" Height="16" Width="16" HorizontalAlignment="Center"
                                                                              Kind="ChevronDown" Foreground="Gray" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Kind" TargetName="Arrow" Value="ChevronUp" />
                                                                    <Setter Property="ToolTip" TargetName="Mask" Value="收起编辑" />
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" TargetName="Arrow" Value="#444444" />
                                                                    <Setter Property="Background" TargetName="Mask">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="Black" Opacity="0.05" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Foreground" TargetName="Arrow" Value="Black" />
                                                                    <Setter Property="Background" TargetName="Mask">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="Black" Opacity="0.1" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <ContentPresenter x:Name="ExpandSite"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      DockPanel.Dock="Bottom" Focusable="False"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}" Visibility="Collapsed"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="MemoEditorToggle" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Canvas HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    Margin="{TemplateBinding Margin}">
                                <Path Fill="{TemplateBinding Foreground}">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <EllipseGeometry RadiusX="12" RadiusY="12" Center="12,12"/>
                                            <EllipseGeometry RadiusX="10" RadiusY="10" Center="12,12"/>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                                <Path x:Name="OuterMask" Fill="Black" Opacity="0">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <EllipseGeometry RadiusX="12" RadiusY="12" Center="12,12"/>
                                            <EllipseGeometry RadiusX="10" RadiusY="10" Center="12,12"/>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                                <Ellipse x:Name="Check" Opacity="0" Width="12" Height="12" Margin="6" Fill="{TemplateBinding Foreground}" />
                                <Ellipse x:Name="InnerMask" Opacity="0" Width="12" Height="12" Margin="6" Fill="Black" />
                            </Canvas>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Check" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="OuterMask" Property="Opacity" Value="0.25" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="OuterMask" Property="Opacity" Value="0.1" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="InnerMask" Property="Opacity" Value="0.25" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="InnerMask" Property="Opacity" Value="0.1" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="MemoCategoryComboBox" TargetType="ComboBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <StackPanel>
                                <ToggleButton BorderThickness="0" Background="Transparent"
                                              IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid>
                                                            <Border Width="80" Height="30" CornerRadius="3"
                                                                    Background="{TemplateBinding Background}"
                                                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                                    BorderThickness="1" BorderBrush="DarkGray">
                                                                <DockPanel Background="Transparent">
                                                                    <ContentPresenter />
                                                                    <mat:PackIcon x:Name="ToggleArrow" Width="20"
                                                                        Height="20" DockPanel.Dock="Right"
                                                                        VerticalAlignment="Center"
                                                                        HorizontalAlignment="Right"
                                                                        Kind="MenuDown" Foreground="DimGray" />
                                                                </DockPanel>
                                                            </Border>
                                                            <Rectangle x:Name="OpacityMask" Fill="Black" Opacity="0"
                                                                       RadiusX="3" RadiusY="3" />
                                                        </Grid>

                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="ToggleArrow" Property="Kind"
                                                                        Value="MenuUp" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsPressed" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="OpacityMask" Property="Opacity"
                                                                        Value="0.05" />
                                                            </MultiTrigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter TargetName="OpacityMask" Property="Opacity"
                                                                        Value="0.1" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                    <TextBlock DockPanel.Dock="Left" Margin="3,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                               Text="{Binding CategoryText}" FontSize="12" Foreground="#444444" Background="Transparent" />
                                </ToggleButton>
                                <Popup PlacementRectangle="3,28,0,1" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" Focusable="False" PopupAnimation="Slide">
                                    <Border HorizontalAlignment="Center" Width="74" BorderBrush="DarkGray" BorderThickness="1">
                                        <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                                      BorderThickness="1" BorderBrush="DarkGray">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="{StaticResource White3}" />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border x:Name="ContainerBorder" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" CornerRadius="1">
                                            <ContentPresenter Height="22" VerticalAlignment="Center" Margin="{TemplateBinding Margin}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsSelected" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="ContainerBorder" Property="Background" Value="{StaticResource Blue4}" />
                                                <Setter TargetName="ContainerBorder" Property="BorderBrush" Value="{StaticResource Blue2}" />
                                            </MultiTrigger>
                                            
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="ContainerBorder" Property="Background" Value="{StaticResource Blue3}" />
                                                <Setter TargetName="ContainerBorder" Property="BorderBrush" Value="{StaticResource Blue1}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="EditorHeaderButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="BackgroundBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" CornerRadius="4"
                                    Background="{StaticResource White2}" BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource White4}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsPressed" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource White3}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="RoundButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center"
                                         Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}">
                                    <Ellipse.Effect>
                                        <DropShadowEffect Opacity="0.2" ShadowDepth="0" BlurRadius="10" />
                                    </Ellipse.Effect>
                                </Ellipse>
                                <ContentPresenter Grid.ZIndex = "1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="DefaultButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border" BorderThickness="0" CornerRadius="2"
                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{StaticResource Blue1}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="False" />
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="#7EAEFF" />
                                </MultiTrigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Blue0}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="InputBox" TargetType="TextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <StackPanel Orientation="Vertical" Background="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Left">
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False"
                                              Margin="0,2" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                <Rectangle Height="1" Fill="{TemplateBinding Background}" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Pen" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="ToggleSwitch" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Canvas Height="24" Width="52" Margin="{TemplateBinding Margin}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <Rectangle x:Name="BackRect" Fill="{TemplateBinding Background}" Width="48" Height="20" 
                                           RadiusX="10" RadiusY="10" StrokeThickness="0" Margin="2"/>
                                <Ellipse x:Name="Switch" Width="24" Height="24" Margin="0" Fill="{TemplateBinding Foreground}">
                                    <Ellipse.Effect>
                                        <DropShadowEffect ShadowDepth="0" Opacity="0.32" BlurRadius="5" />
                                    </Ellipse.Effect>
                                </Ellipse>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="BackRect" Property="Fill" Value="#BBBBBB" />
                                    <Setter TargetName="Switch" Property="Fill" Value="{StaticResource White1}" />
                                </Trigger>
                                <EventTrigger RoutedEvent="Checked">
                                    <BeginStoryboard>
                                        <Storyboard TargetName="Switch" TargetProperty="Margin">
                                            <ThicknessAnimation From="0" To="28,0" Duration="0:0:0.1" AutoReverse="False" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard TargetName="Switch" TargetProperty="Margin">
                                            <ThicknessAnimation From="28,0" To="0" Duration="0:0:0.1" AutoReverse="False" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>
